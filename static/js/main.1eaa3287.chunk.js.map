{"version":3,"sources":["components/Categories/query.js","components/CategoriesTable/index.js","components/Categories/index.js","components/Products/query.js","components/Products/mutations.js","components/ProductsTable/index.js","components/ProductsForm/index.js","components/Products/index.js","components/TabsContainer/index.js","App.js","serviceWorker.js","apollo-client.js","index.js"],"names":["categoriesAllQuery","gql","styleIconInTable","width","height","marginRight","CategoriesTable","useQuery","loading","data","error","categoriesAll","console","log","columns","title","dataIndex","key","render","icons","length","map","icon","alt","src","style","dataSource","rowKey","Categories","type","shape","position","bottom","right","color","PlusOutlined","fontSize","productsAllQuery","addProductMutation","updateProductMutation","deleteProductMutation","styleImagesInTable","ProductsTable","prodSet","visibleSet","useState","vis","visSet","prod","pSet","useMutation","deleteProduct","productsAll","handleEdit","id","product","find","handleDelete","category","name","images","image","onClick","bind","danger","visible","onOk","variables","onCancel","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","ProductsForm","addProduct","updateProduct","price","values","setValues","useEffect","handleChange","e","target","value","footer","preventDefault","initialValues","onFinish","categoryId","Number","Item","label","rules","required","message","onChange","placeholder","Option","List","fields","add","remove","field","index","validateTrigger","whitespace","noStyle","className","htmlType","Products","TabPane","Tabs","callback","TabsContainer","defaultActiveKey","tab","App","href","process","REACT_APP_BASE_URL","rel","Boolean","window","location","hostname","match","client","ApolloClient","uri","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1eaa3287.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\n\nexport const categoriesAllQuery = gql`\n    {\n        categoriesAll{\n            id,\n            name,\n            icons\n        }\n    }\n`","import React from \"react\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { Table } from \"antd\"\nimport { categoriesAllQuery } from \"../Categories/query\"\n\nconst styleIconInTable = { width: \"20px\", height: \"100%\", marginRight: \"10px\" }\n\nconst CategoriesTable = () => {\n  const { loading, error, data } = useQuery(categoriesAllQuery)\n\n  if (loading) return <p>Loading ... </p>\n  const { categoriesAll } = data\n  console.log(categoriesAll)\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\"\n    },\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      key: \"id\"\n    },\n    {\n      title: \"Icons\",\n      dataIndex: \"icons\",\n      key: \"icons\",\n      render: icons => {\n        return (icons.length !== 0)\n          ? <div>\n            {\n              icons\n                .map(icon => <img\n                  key={icon} alt=\"img\"\n                  src={icon}\n                  style={styleIconInTable}/>\n                )\n            }\n          </div>\n          : <span>no icons</span>\n      }\n    }\n  ]\n\n  return (\n    <>\n      <Table dataSource={categoriesAll} columns={columns} rowKey=\"id\"/>\n    </>\n  )\n}\n\nexport default CategoriesTable","import React from \"react\"\nimport { Button, Tooltip } from \"antd\"\nimport { PlusOutlined } from \"@ant-design/icons\"\nimport CategoriesTable from \"../CategoriesTable\"\n\nconst Categories = () => {\n  return (\n    <>\n      <h1>Categories</h1>\n      <CategoriesTable/>\n      <Tooltip title=\"Add Category\">\n        <Button type=\"dashed\" shape=\"circle\"\n                style={{ position: \"fixed\", bottom: \"50px\", right: \"50px\", color: \"#08c\" }}\n        ><PlusOutlined\n          style={{ fontSize: \"22px\", color: \"#08c\" }}\n        /></Button>\n      </Tooltip>\n    </>\n  )\n}\n\nexport default Categories","import { gql } from \"apollo-boost\"\n\nexport const productsAllQuery = gql`\n    {\n        productsAll{\n            id,\n            name,\n            price,\n            images,\n            category{\n                id,\n                name,\n                icons\n            }\n        }\n    }\n`","import { gql } from \"apollo-boost\"\n\nexport const addProductMutation = gql`\n    mutation AddProduct($name: String!, $price: Int!, $categoryId: ID!, $images: [String] ) {\n        addProduct(name: $name, price: $price, categoryId: $categoryId, images: $images ){\n            name\n        }\n    }\n`\n\nexport const updateProductMutation = gql`\n    mutation UpdateProduct($id: ID, $name: String!, $price: Int!, $categoryId: ID!, $images: [String] ) {\n        updateProduct(id: $id, name: $name, price: $price, categoryId: $categoryId, images: $images ){\n            name\n        }\n    }\n`\n\nexport const deleteProductMutation = gql`\n    mutation DeleteProduct($id: ID) {\n        deleteProduct(id: $id){\n            id\n        }\n    }\n`","import React, { useState } from \"react\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\nimport { Button, Modal, Table } from \"antd\"\nimport { productsAllQuery } from \"../Products/query\"\nimport { deleteProductMutation } from \"../Products/mutations\"\n\nconst styleImagesInTable = { width: \"50px\", height: \"100%\", marginRight: \"10px\" }\nconst styleIconInTable = { width: \"20px\", height: \"100%\", marginRight: \"10px\" }\n\nconst ProductsTable = ({ prodSet, visibleSet }) => {\n  const { loading, error, data } = useQuery(productsAllQuery)\n  const [vis, visSet] = useState(false)\n  const [prod, pSet] = useState({})\n  const [deleteProduct, {}] = useMutation(deleteProductMutation)\n\n  if (loading) return <p>Loading ... </p>\n  const { productsAll } = data\n\n  const handleEdit = (id) => {\n    const product = productsAll.find(prod => prod.id === id)\n    prodSet(product)\n    visibleSet(true)\n    console.log(\"table\", product)\n  }\n\n  const handleDelete = (id) => {\n    visSet(true)\n    const prod = productsAll.find(prod => prod.id === id)\n    pSet(prod)\n    console.log(\"table\", prod)\n  }\n\n  const handleOk = (id) => {\n    deleteProduct({\n      variables: {\n        id\n      }\n    })\n    visSet(false)\n  }\n\n  const handleCancel = () => {\n    visSet(false)\n  }\n\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\"\n    },\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      key: \"id\"\n    },\n    {\n      title: \"Price\",\n      dataIndex: \"price\",\n      key: \"price\"\n    },\n    {\n      title: \"Category\",\n      dataIndex: \"category\",\n      key: \"category\",\n      render: category => {\n        const { name, icons, id } = category\n        return <div><span>{name} </span>\n          {(icons.length !== 0)\n            ? <img\n              key={icons[0]} alt=\"img\"\n              src={icons[0]}\n              style={styleIconInTable}/> : \"\"}\n          <span> {id}</span>\n        </div>\n      }\n    },\n    {\n      title: \"Images\",\n      dataIndex: \"images\",\n      key: \"images\",\n      render: images => {\n        return (images.length !== 0)\n          ? <div>\n            {\n              images\n                .map(image => <img\n                  key={image} alt=\"img\"\n                  src={image}\n                  style={styleImagesInTable}/>\n                )\n            }\n          </div>\n          : <span>no icons</span>\n      }\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"id\",\n      key: \"id\",\n      render: (id) => <>\n        <Button onClick={handleEdit.bind(null, id)} type=\"dashed\">\n          Edit\n        </Button>\n        <Button onClick={handleDelete.bind(null, id)} type=\"dashed\" danger>\n          Delete\n        </Button>\n      </>\n    }\n  ]\n  return (\n    <>\n      <Table dataSource={productsAll} columns={columns} rowKey=\"id\"/>\n      <Modal\n        title=\"Delete product?\"\n        visible={vis}\n        onOk={handleOk.bind(null, prod.id)}\n        onCancel={handleCancel}\n      >\n        <p>{prod.name}</p>\n      </Modal>\n    </>\n  )\n}\n\nexport default ProductsTable","import React, { useEffect, useState } from \"react\"\nimport { Button, Form, Input, Modal, Select } from \"antd\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\nimport PlusOutlined from \"@ant-design/icons/lib/icons/PlusOutlined\"\nimport MinusCircleOutlined from \"@ant-design/icons/lib/icons/MinusCircleOutlined\"\nimport { addProductMutation, updateProductMutation } from \"../Products/mutations\"\nimport { categoriesAllQuery } from \"../Categories/query\"\n\nconst ProductsForm = ({ prod, visible, visibleSet }) => {\n  const [addProduct, {}] = useMutation(addProductMutation)\n  const [updateProduct, {}] = useMutation(updateProductMutation)\n  const { loading, error, data } = useQuery(categoriesAllQuery)\n  const [values, setValues] = useState({ name: \"\", price: 0, category: \"\" })\n  useEffect(() => {\n    setValues(prod)\n  }, [prod])\n  console.log(\"values\", values)\n  const onFinish = values => {\n    console.log(\"Received values of form:\", values)\n\n    const { id, name, categoryId, images, icon } = values\n    const price = Number(values.price)\n\n    id ?\n      updateProduct({\n        variables: {\n          id, name, price, categoryId, images, icon\n        }\n      })\n      : addProduct({\n        variables: {\n          name, price, categoryId, images, icon\n        }\n      })\n    visibleSet(false)\n  }\n\n  const handleCancel = e => {\n    e.preventDefault()\n    console.log(e)\n    visibleSet(false)\n  }\n  const handleChange = e => {\n    const { name, value } = e.target\n\n    setValues({ ...values, [name]: value })\n  }\n  const { categoriesAll = [] } = data\n  return (\n    <Modal\n      title=\"Product information\"\n      visible={visible}\n      footer={false}\n      // onOk={onFinish}\n      onCancel={handleCancel}\n      // okButtonProps={{htmlType: \"submit\" }}\n      // cancelButtonProps={{ htmlType: \"submit\" }}\n    >\n\n      <Form\n        initialValues={{\n          [\"price\"]: values.price,\n          [\"name\"]: values.name,\n          [\"images\"]: values.images,\n          [\"icon\"]: values.icon\n          // [\"categoryId\"]: values.category.id\n\n        }}\n        name=\"product\" {...formItemLayoutWithOutLabel} onFinish={onFinish}>\n        <Form.Item\n          label=\"Name product\"\n          name=\"name\"\n          // value={values.name}\n\n          // noStyle\n          rules={[{ required: true, message: \"Name product is required\" }]}\n        >\n          <Input onChange={handleChange} placeholder=\"name product\"\n                 style={{ width: \"100%\", marginRight: 8 }}/>\n        </Form.Item>\n        <Form.Item\n          label=\"Price\"\n          name=\"price\"\n          // noStyle\n          rules={[{ required: true, message: \"Price is required\" }]}\n        >\n          <Input type=\"number\" placeholder=\"Price $\" style={{ width: \"100%\", marginRight: 8 }}/>\n        </Form.Item>\n\n        <Form.Item\n          label=\"Category\"\n          name=\"categoryId\"\n          // noStyle\n          onChange={handleChange}\n          rules={[{ required: true, message: \"Category is required\" }]}\n        >\n          <Select placeholder=\"Select category\">\n            {categoriesAll.map(category =>\n              <Select.Option\n                key={category.id}\n                // value={category.id}\n              >{category.name}</Select.Option>\n            )\n            }\n          </Select>\n        </Form.Item>\n\n        <Form.List name=\"images\">\n          {(fields, { add, remove }) => {\n            return (\n              <div>\n                {fields.map((field, index) => (\n                  <Form.Item\n                    {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n                    label={index === 0 ? \"Images\" : \"\"}\n                    required={false}\n                    key={field.key}\n                  >\n                    <Form.Item\n                      {...field}\n                      validateTrigger={[\"onChange\", \"onBlur\"]}\n                      rules={[\n                        {\n                          required: true,\n                          whitespace: true,\n                          message: \"Please input image url or delete this field.\"\n                        }\n                      ]}\n                      noStyle\n                    >\n                      <Input value={values.images[index]} onChange={handleChange} placeholder=\"image url\"\n                             style={{ width: \"90%\", marginRight: 8 }}/>\n                    </Form.Item>\n                    {fields.length > 1 ? (\n                      <MinusCircleOutlined\n                        className=\"dynamic-delete-button\"\n                        onClick={() => {\n                          remove(field.name)\n                        }}\n                      />\n                    ) : null}\n                  </Form.Item>\n                ))}\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => {\n                      add()\n                    }}\n                    style={{ width: \"80%\" }}\n                  >\n                    <PlusOutlined/> Add image url\n                  </Button>\n                </Form.Item>\n              </div>\n            )\n          }}\n        </Form.List>\n        <Form.Item\n          label=\"Icon\"\n          name=\"icon\"\n          // noStyle\n        >\n          <Input onChange={handleChange} placeholder=\"icon url\" style={{ width: \"100%\", marginRight: 8 }}/>\n        </Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form>\n\n    </Modal>\n  )\n}\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 4 }\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 20 }\n  }\n}\n\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: { span: 24, offset: 0 },\n    sm: { span: 20, offset: 4 }\n  }\n}\n\nexport default ProductsForm","import React, { useState } from \"react\"\nimport { Button, Tooltip } from \"antd\"\nimport { PlusOutlined } from \"@ant-design/icons\"\nimport ProductsTable from \"../ProductsTable\"\nimport ProductsForm from \"../ProductsForm\"\n\nconst Products = () => {\n  const [visible, visibleSet] = useState(false)\n  const [prod, prodSet] = useState(false)\n\n  const onClickHandler = () => {\n    visibleSet(true)\n  }\n  return (\n    <>\n      <h1>Products</h1>\n      <ProductsTable visibleSet={visibleSet} prodSet={prodSet}/>\n      <ProductsForm  prod={prod} visible={visible} visibleSet={visibleSet}/>\n      <Tooltip title=\"Add Product\">\n        <Button onClick={onClickHandler} type=\"dashed\" shape=\"circle\"\n                style={{ position: \"fixed\", bottom: \"50px\", right: \"50px\", color: \"#08c\" }}\n        ><PlusOutlined\n          style={{ fontSize: \"22px\", color: \"#08c\" }}\n        /></Button>\n      </Tooltip>\n    </>\n  )\n}\n\nexport default Products","import React from \"react\"\nimport { Tabs } from \"antd\"\nimport Categories from \"../Categories\"\nimport Products from \"../Products\"\n\nconst { TabPane } = Tabs\n\nfunction callback(key) {\n  console.log(key)\n}\n\nconst TabsContainer = () => {\n  return (\n    <Tabs defaultActiveKey=\"1\" onChange={callback}>\n      <TabPane tab=\"Categories\" key=\"1\">\n        <Categories/>\n      </TabPane>\n      <Tabs.TabPane tab=\"Products\" key=\"2\">\n        <Products/>\n      </Tabs.TabPane>\n    </Tabs>\n  )\n}\n\nexport default TabsContainer","import React from \"react\"\nimport TabsContainer from \"./components/TabsContainer\"\nimport \"antd/dist/antd.css\";\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          <code> APP</code>\n        </p>\n        <a\n          className=\"App-link\"\n          href={process.env.REACT_APP_BASE_URL}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          REACT_APP_BASE_URL\n        </a>\n      </header>\n      <TabsContainer/>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import ApolloClient from \"apollo-boost\"\n\n// const BASE_URL = 'http://localhost:3005/graphql'\nconst BASE_URL = 'https://glacial-mesa-30936.herokuapp.com:59609/graphql'\n\nexport const client = new ApolloClient({\n  uri: BASE_URL\n})","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { ApolloProvider } from \"react-apollo\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { client } from \"./apollo-client\"\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App/>\n  </ApolloProvider>,\ndocument.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}