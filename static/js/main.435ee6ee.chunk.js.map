{"version":3,"sources":["components/Categories/query.js","components/CategoriesTable/index.js","components/Categories/index.js","components/Products/query.js","components/Products/mutations.js","actions/index.js","actions/types.js","components/ProductsTable/index.js","components/ProductsForm/index.js","components/Products/index.js","components/TabsContainer/index.js","App.js","serviceWorker.js","store/apollo-client.js","reducer/modal.js","reducer/edit-product.js","reducer/index.js","store/index.js","index.js"],"names":["categoriesAllQuery","gql","styleIconInTable","width","height","marginRight","CategoriesTable","useQuery","loading","data","error","categoriesAll","console","log","columns","title","dataIndex","key","render","icons","length","map","icon","alt","src","style","dataSource","rowKey","Categories","type","shape","position","bottom","right","color","PlusOutlined","fontSize","productsAllQuery","addProductMutation","updateProductMutation","deleteProductMutation","editProduct","product","payload","setIsOpenModal","isOpen","styleImagesInTable","connect","pure","useState","isVisualDeleteModal","setIsVisualDeleteModal","productDeleted","setProductDeleted","useMutation","deleteProduct","productsAll","handleEdit","id","find","prod","handleDelete","category","name","images","image","onClick","bind","danger","visible","onOk","variables","onCancel","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","state","isOpenModal","modal","edited_product","edit_product","Form","useForm","form","addProduct","updateProduct","price","values","setValues","useEffect","resetFields","handleChange","e","target","value","footer","forceRender","destroyOnClose","setFieldsValue","onFinish","categoryId","Number","Item","label","rules","required","message","onChange","placeholder","Option","List","fields","add","remove","field","index","validateTrigger","whitespace","noStyle","className","htmlType","TabPane","Tabs","callback","TabsContainer","defaultActiveKey","tab","App","href","rel","Boolean","window","location","hostname","match","client","ApolloClient","uri","initialState","combineReducers","action","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.435ee6ee.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\n\nexport const categoriesAllQuery = gql`\n    {\n        categoriesAll{\n            id,\n            name,\n            icons\n        }\n    }\n`","import React from \"react\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { Table } from \"antd\"\nimport { categoriesAllQuery } from \"../Categories/query\"\n\nconst styleIconInTable = { width: \"20px\", height: \"100%\", marginRight: \"10px\" }\n\nconst CategoriesTable = () => {\n  const { loading, error, data } = useQuery(categoriesAllQuery)\n\n  if (loading) return <p>Loading ... </p>\n  const { categoriesAll } = data\n  console.log(categoriesAll)\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\"\n    },\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      key: \"id\"\n    },\n    {\n      title: \"Icons\",\n      dataIndex: \"icons\",\n      key: \"icons\",\n      render: icons => {\n        return (icons.length !== 0)\n          ? <div>\n            {\n              icons\n                .map(icon => <img\n                  key={icon} alt=\"img\"\n                  src={icon}\n                  style={styleIconInTable}/>\n                )\n            }\n          </div>\n          : <span>no icons</span>\n      }\n    }\n  ]\n\n  return (\n    <>\n      <Table dataSource={categoriesAll} columns={columns} rowKey=\"id\"/>\n    </>\n  )\n}\n\nexport default CategoriesTable","import React from \"react\"\nimport { Button, Tooltip } from \"antd\"\nimport { PlusOutlined } from \"@ant-design/icons\"\nimport CategoriesTable from \"../CategoriesTable\"\n\nconst Categories = () => {\n  return (\n    <>\n      <h1>Categories</h1>\n      <CategoriesTable/>\n      <Tooltip title=\"Add Category\">\n        <Button type=\"dashed\" shape=\"circle\"\n                style={{ position: \"fixed\", bottom: \"50px\", right: \"50px\", color: \"#08c\" }}\n        ><PlusOutlined\n          style={{ fontSize: \"22px\", color: \"#08c\" }}\n        /></Button>\n      </Tooltip>\n    </>\n  )\n}\n\nexport default Categories","import { gql } from \"apollo-boost\"\n\nexport const productsAllQuery = gql`\n    {\n        productsAll{\n            id,\n            name,\n            price,\n            images,\n            category{\n                id,\n                name,\n                icons\n            }\n        }\n    }\n`","import { gql } from \"apollo-boost\"\n\nexport const addProductMutation = gql`\n    mutation AddProduct($name: String!, $price: Int!, $categoryId: ID!, $images: [String] ) {\n        addProduct(name: $name, price: $price, categoryId: $categoryId, images: $images ){\n            name\n        }\n    }\n`\n\nexport const updateProductMutation = gql`\n    mutation UpdateProduct($id: ID, $name: String!, $price: Int!, $categoryId: ID!, $images: [String] ) {\n        updateProduct(id: $id, name: $name, price: $price, categoryId: $categoryId, images: $images ){\n            name\n        }\n    }\n`\n\nexport const deleteProductMutation = gql`\n    mutation DeleteProduct($id: ID) {\n        deleteProduct(id: $id){\n            id\n        }\n    }\n`","import { EDIT_PRODUCT, IS_OPEN_MODAL, IS_OPEN_DELETE_MODAL } from \"./types\"\n\nexport const editProduct = product => ({\n  type: EDIT_PRODUCT,\n  payload: product\n})\n\nexport const setIsOpenModal = isOpen => ({\n  type: IS_OPEN_MODAL,\n  payload: isOpen\n})\n","export const EDIT_PRODUCT = \"EDIT_PRODUCT\"\nexport const IS_OPEN_MODAL = \"IS_OPEN_MODAL\"\n// export const BASE_URL = \"http://localhost:3005/graphql\"\nexport const BASE_URL = 'https://glacial-mesa-30936.herokuapp.com/graphql'\n","import React, { useState } from \"react\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\nimport { Button, Modal, Table } from \"antd\"\nimport { productsAllQuery } from \"../Products/query\"\nimport { deleteProductMutation } from \"../Products/mutations\"\nimport { connect } from \"react-redux\"\nimport { editProduct, setIsOpenModal } from \"../../actions\"\n\nconst styleImagesInTable = { width: \"50px\", height: \"100%\", marginRight: \"10px\" }\nconst styleIconInTable = { width: \"20px\", height: \"100%\", marginRight: \"10px\" }\n\nconst ProductsTable = ({ editProduct, setIsOpenModal }) => {\n  const { loading, error, data } = useQuery(productsAllQuery)\n  const [isVisualDeleteModal, setIsVisualDeleteModal] = useState(false)\n  const [productDeleted, setProductDeleted] = useState({})\n  const [deleteProduct, {}] = useMutation(deleteProductMutation)\n\n  if (loading) return <p>Loading ... </p>\n  const { productsAll } = data\n\n  const handleEdit = (id) => {\n    editProduct(productsAll.find(prod => prod.id === id))\n\n\n    setIsOpenModal(true)\n\n  }\n\n  const handleDelete = (id) => {\n    setIsVisualDeleteModal(true)\n    setProductDeleted(productsAll.find(prod => prod.id === id))\n    console.log(\"table\", productDeleted)\n  }\n\n  const handleOk = () => {\n    deleteProduct({\n      variables: {\n        id: productDeleted.id\n      }\n    })\n    setIsVisualDeleteModal(false)\n  }\n\n  const handleCancel = () => {\n    setIsVisualDeleteModal(false)\n  }\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\"\n    },\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      key: \"id\"\n    },\n    {\n      title: \"Price\",\n      dataIndex: \"price\",\n      key: \"price\"\n    },\n    {\n      title: \"Category\",\n      dataIndex: \"category\",\n      key: \"category\",\n      render: category => {\n        const { name, icons, id } = category\n        return <div><span>{name} </span>\n          {(icons.length !== 0)\n            ? <img\n              key={icons[0]} alt=\"img\"\n              src={icons[0]}\n              style={styleIconInTable}/> : \"\"}\n          <span> {id}</span>\n        </div>\n      }\n    },\n    {\n      title: \"Images\",\n      dataIndex: \"images\",\n      key: \"images\",\n      render: images => {\n        return (images.length !== 0)\n          ? <div>\n            {\n              images\n                .map(image => <img\n                  key={image} alt=\"img\"\n                  src={image}\n                  style={styleImagesInTable}/>\n                )\n            }\n          </div>\n          : <span>no icons</span>\n      }\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"id\",\n      key: \"id\",\n      render: (id) => <>\n        <Button onClick={handleEdit.bind(null, id)} type=\"dashed\">\n          Edit\n        </Button>\n        <Button onClick={handleDelete.bind(null, id)} type=\"dashed\" danger>\n          Delete\n        </Button>\n      </>\n    }\n  ]\n  return (\n    <>\n      <Table dataSource={productsAll} columns={columns} rowKey=\"id\"/>\n      <Modal\n        title=\"Delete product?\"\n        visible={isVisualDeleteModal}\n        onOk={handleOk.bind(null, productDeleted.id)}\n        onCancel={handleCancel}\n      >\n        <p>{productDeleted.name}</p>\n      </Modal>\n    </>\n  )\n}\n\nexport default connect(null, { setIsOpenModal, editProduct }, null, { pure: false }\n)(ProductsTable)","import React, { useEffect, useState } from \"react\"\nimport { Button, Form, Input, Modal, Select } from \"antd\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\nimport PlusOutlined from \"@ant-design/icons/lib/icons/PlusOutlined\"\nimport MinusCircleOutlined from \"@ant-design/icons/lib/icons/MinusCircleOutlined\"\nimport { addProductMutation, updateProductMutation } from \"../Products/mutations\"\nimport { categoriesAllQuery } from \"../Categories/query\"\nimport { connect } from \"react-redux\"\nimport { editProduct, setIsOpenModal } from \"../../actions\"\n\nconst ProductsForm = ({ edited_product, editProduct, isOpenModal, setIsOpenModal, isOpen }) => {\n  const [form] = Form.useForm()\n  const [addProduct, {}] = useMutation(addProductMutation)\n  const [updateProduct, {}] = useMutation(updateProductMutation)\n  const { loading, error, data } = useQuery(categoriesAllQuery)\n  const [values, setValues] = useState({ name: \"\", price: 0, category: \"\" })\n  useEffect(() => {\n    setValues(edited_product)\n    console.log(\"edited_product\", edited_product)\n  }, [edited_product])\n  useEffect(() => {\n\n    return () => {\n      form.resetFields()\n    }\n  }, [])\n  console.log(\"values\", values)\n\n  const onFinish = values => {\n    console.log(\"Received values of form:\", values)\n\n    const { id, name, categoryId, images, icon } = values\n    const price = Number(values.price)\n\n    id ?\n      updateProduct({\n        variables: {\n          id, name, price, categoryId, images, icon\n        }\n      })\n      : addProduct({\n        variables: {\n          name, price, categoryId, images, icon\n        }\n      })\n    setIsOpenModal(false)\n  }\n\n  const handleCancel = e => {\n    console.log(e)\n    setIsOpenModal(false)\n    editProduct({})\n  }\n  const handleChange = e => {\n    const { name, value } = e.target\n    setValues({ ...values, [name]: value })\n  }\n  const { categoriesAll = [] } = data\n  console.log(\"isOpenModal\", isOpenModal)\n\n  return (\n    <Modal\n      title=\"Product information\"\n      visible={isOpenModal}\n      footer={false}\n      // onOk={onFinish}\n      onCancel={handleCancel}\n      forceRender={true}\n      destroyOnClose={false}\n      // okButtonProps={{htmlType: \"submit\" }}\n      // cancelButtonProps={{ htmlType: \"submit\" }}\n    >\n      {form.setFieldsValue({\n        \"name\": values.name,\n        \"price\": values.price,\n        \"images\": values.images,\n        \"icon\": values.icon\n        // \"categoryId\": values.category.id\n      })}\n      <Form form={form}\n            name=\"product\" {...formItemLayoutWithOutLabel} onFinish={onFinish}>\n        <Form.Item\n          label=\"Name product\"\n          name=\"name\"\n          // noStyle\n          rules={[{ required: true, message: \"Name product is required\" }]}\n        >\n          <Input onChange={handleChange} placeholder=\"name product\"\n                 style={{ width: \"100%\", marginRight: 8 }}/>\n        </Form.Item>\n        <Form.Item\n          label=\"Price\"\n          name=\"price\"\n          // noStyle\n          rules={[{ required: true, message: \"Price is required\" }]}\n        >\n          <Input type=\"number\" placeholder=\"Price $\" style={{ width: \"100%\", marginRight: 8 }}/>\n        </Form.Item>\n\n        <Form.Item\n          label=\"Category\"\n          name=\"categoryId\"\n          // noStyle\n          onChange={handleChange}\n          rules={[{ required: true, message: \"Category is required\" }]}\n        >\n          <Select placeholder=\"Select category\">\n            {categoriesAll.map(category =>\n              <Select.Option\n                key={category.id}\n                // value={category.id}\n              >{category.name}</Select.Option>\n            )\n            }\n          </Select>\n        </Form.Item>\n\n        <Form.List name=\"images\">\n          {(fields, { add, remove }) => {\n            return (\n              <div>\n                {fields.map((field, index) => (\n                  <Form.Item\n                    {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n                    label={index === 0 ? \"Images\" : \"\"}\n                    required={false}\n                    key={field.key}\n                  >\n                    <Form.Item\n                      {...field}\n                      validateTrigger={[\"onChange\", \"onBlur\"]}\n                      rules={[\n                        {\n                          required: true,\n                          whitespace: true,\n                          message: \"Please input image url or delete this field.\"\n                        }\n                      ]}\n                      noStyle\n                    >\n                      <Input value={values.images[index]} onChange={handleChange} placeholder=\"image url\"\n                             style={{ width: \"90%\", marginRight: 8 }}/>\n                    </Form.Item>\n                    {fields.length > 1 ? (\n                      <MinusCircleOutlined\n                        className=\"dynamic-delete-button\"\n                        onClick={() => {\n                          remove(field.name)\n                        }}\n                      />\n                    ) : null}\n                  </Form.Item>\n                ))}\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => {\n                      add()\n                    }}\n                    style={{ width: \"80%\" }}\n                  >\n                    <PlusOutlined/> Add image url\n                  </Button>\n                </Form.Item>\n              </div>\n            )\n          }}\n        </Form.List>\n        <Form.Item\n          label=\"Icon\"\n          name=\"icon\"\n          // noStyle\n        >\n          <Input onChange={handleChange} placeholder=\"icon url\" style={{ width: \"100%\", marginRight: 8 }}/>\n        </Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form>\n\n    </Modal>\n  )\n}\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 4 }\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 20 }\n  }\n}\n\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: { span: 24, offset: 0 },\n    sm: { span: 20, offset: 4 }\n  }\n}\n\nexport default connect(state => ({\n    isOpenModal: state.modal.isOpen,\n    edited_product: state.edit_product.product\n  }), { setIsOpenModal, editProduct }, null, { pure: false }\n)(ProductsForm)","import React, { useState } from \"react\"\nimport { Button, Tooltip } from \"antd\"\nimport { PlusOutlined } from \"@ant-design/icons\"\nimport ProductsTable from \"../ProductsTable\"\nimport ProductsForm from \"../ProductsForm\"\nimport { connect } from \"react-redux\"\nimport { editProduct, setIsOpenModal } from \"../../actions\"\n\nconst Products = ({ setIsOpenModal }) => {\n\n  const onClickHandler = () => {\n    editProduct({})\n    setIsOpenModal(true)\n  }\n  return (\n    <>\n      <h1>Products</h1>\n      <ProductsTable/>\n      <ProductsForm/>\n      <Tooltip title=\"Add Product\">\n        <Button onClick={onClickHandler} type=\"dashed\" shape=\"circle\"\n                style={{ position: \"fixed\", bottom: \"50px\", right: \"50px\", color: \"#08c\" }}\n        ><PlusOutlined\n          style={{ fontSize: \"22px\", color: \"#08c\" }}\n        /></Button>\n      </Tooltip>\n    </>\n  )\n}\n\nexport default connect(null, { setIsOpenModal, editProduct }, null, { pure: false }\n)(Products)","import React from \"react\"\nimport { Tabs } from \"antd\"\nimport Categories from \"../Categories\"\nimport Products from \"../Products\"\n\nconst { TabPane } = Tabs\n\nfunction callback(key) {\n  console.log(key)\n}\n\nconst TabsContainer = () => {\n  return (\n    <Tabs defaultActiveKey=\"1\" onChange={callback}>\n      <TabPane tab=\"Categories\" key=\"1\">\n        <Categories/>\n      </TabPane>\n      <Tabs.TabPane tab=\"Products\" key=\"2\">\n        <Products/>\n      </Tabs.TabPane>\n    </Tabs>\n  )\n}\n\nexport default TabsContainer","import React from \"react\"\nimport TabsContainer from \"./components/TabsContainer\"\nimport \"antd/dist/antd.css\";\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          <code> APP</code>\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"http://localhost:3005/graphql\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          REACT_APP_BASE_URL\n        </a>\n      </header>\n      <TabsContainer/>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import ApolloClient from \"apollo-boost\"\nimport { BASE_URL } from \"../actions/types\"\n\nexport const client = new ApolloClient({\n  uri: BASE_URL\n})\n","import { IS_OPEN_MODAL } from \"../actions/types\"\n\nconst initialState = {\n  isOpen: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case IS_OPEN_MODAL:\n      return {\n        ...state,\n        isOpen: action.payload\n      }\n    default:\n      return state\n  }\n}","import { EDIT_PRODUCT } from \"../actions/types\"\n\nconst initialState = {\n  product: {}\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case EDIT_PRODUCT:\n      return {\n        ...state,\n        product: action.payload\n      }\n    default:\n      return state\n  }\n}","import { combineReducers } from \"redux\"\nimport modal from \"./modal\"\nimport edit_product from \"./edit-product\"\n\nexport default combineReducers({ modal, edit_product })","\nimport { createStore, compose } from \"redux\";\nimport reducer from \"../reducer\";\n\nconst composeEnhancers =\n  typeof window === \"object\" &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\nconst enhancer = composeEnhancers();\n\nconst store = createStore(reducer, {}, enhancer);\n\nexport default store;","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport { ApolloProvider } from \"react-apollo\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { client } from \"./store/apollo-client\"\nimport store from \"./store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <ApolloProvider client={client}>\n      <App/>\n    </ApolloProvider>\n  </Provider>, document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}