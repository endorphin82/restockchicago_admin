{"version":3,"sources":["components/Categories/query.js","components/CategoriesTable/index.js","components/Categories/index.js","components/Products/query.js","components/Products/mutations.js","actions/index.js","actions/types.js","components/ProductsTable/index.js","components/ProductEditForm/index.js","components/ProductAddForm/index.js","components/Products/index.js","components/RecycleBinIcon/index.js","components/RecycleBinProductsTable/index.js","components/RecycleBin/index.js","components/TabsContainer/index.js","App.js","serviceWorker.js","store/apollo-client.js","reducer/edit-modal.js","reducer/add-modal.js","reducer/edit-product.js","reducer/index.js","store/index.js","index.js"],"names":["categoriesAllQuery","gql","categoryByIdQuery","styleIconInTable","width","height","marginRight","CategoriesTable","useQuery","loading","data","error","categoriesAll","console","log","columns","title","dataIndex","key","render","icons","length","map","icon","alt","src","style","dataSource","rowKey","Categories","type","shape","position","bottom","right","color","PlusOutlined","fontSize","productsAllQuery","productsByCategoryIdQuery","addProductMutation","updateProductMutation","deleteProductMutation","clearRecycleBinMutation","editProduct","product","payload","setIsOpenEditProductModal","isOpen","setIsOpenAddProductModal","styleImagesInTable","connect","pure","useMutation","update","cache","updateProduct","productsByCategoryId","readQuery","query","variables","categoryId","process","writeQuery","concat","useState","isVisualDeleteModal","setIsVisualDeleteModal","productDeleted","setProductDeleted","productsAllWithoutRecycleBin","productsAll","filter","prod","category","id","name","images","image","onClick","find","handleEdit","float","handleDelete","danger","DeleteOutlined","visible","onOk","price","then","m","catch","e","handleOk","onCancel","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","state","isOpenEditProductModal","edit_product_modal","edited_product","edit_product","Form","useForm","formEditProduct","values","setValues","useEffect","setFieldsValue","resetFields","handleChange","target","value","footer","forceRender","destroyOnClose","form","onFinish","valuefromformlist","String","Item","label","rules","required","message","onChange","placeholder","Option","firstActiveValue","List","fields","add","remove","field","index","validateTrigger","whitespace","noStyle","className","htmlType","isOpenAddProductModal","add_product_modal","addProduct","data_categories","preventDefault","RecycleBinIcon","categoryById","RecycleBinProductsTable","recycle_bin_prod_loading","recycle_bin_prod_data","recycle_bin_prod_error","deleteProduct","disabled","mess","RecycleBin","clearRecycleBin","display","r","TabPane","Tabs","callback","TabsContainer","cat_loading","cat_data","cat_error","prod_loading","prod_data","prod_error","recycle_bin_error","recycle_bin_cat_loading","recycle_bin_cat_data","recycle_bin_cat_error","defaultActiveKey","tab","App","href","rel","Boolean","window","location","hostname","match","InMemoryCache","client","ApolloClient","uri","initialState","combineReducers","action","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.428a2094.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\n\nexport const categoriesAllQuery = gql`\n    {\n        categoriesAll{\n            id,\n            name,\n            icons\n        }\n    }\n`\nexport const categoryByIdQuery = gql`\n    query categoryById($id: ID){\n        categoryById(id: $id){\n            id\n            name\n            icons\n        }\n    }\n`","import React from \"react\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { Table } from \"antd\"\nimport { categoriesAllQuery } from \"../Categories/query\"\n\nconst styleIconInTable = { width: \"20px\", height: \"100%\", marginRight: \"10px\" }\n\nconst CategoriesTable = () => {\n  const { loading, error, data } = useQuery(categoriesAllQuery)\n\n  if (loading) return <p>Loading ... </p>\n  const { categoriesAll } = data\n  console.log(categoriesAll)\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\"\n    },\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      key: \"id\"\n    },\n    {\n      title: \"Icons\",\n      dataIndex: \"icons\",\n      key: \"icons\",\n      render: icons => {\n        return (icons.length !== 0)\n          ? <div>\n            {\n              icons\n                .map(icon => <img\n                  key={icon} alt=\"img\"\n                  src={icon}\n                  style={styleIconInTable}/>\n                )\n            }\n          </div>\n          : <span>no icons</span>\n      }\n    }\n  ]\n\n  return (\n    <>\n      <Table dataSource={categoriesAll} columns={columns} rowKey=\"id\"/>\n    </>\n  )\n}\n\nexport default CategoriesTable","import React from \"react\"\nimport { Button, Tooltip } from \"antd\"\nimport { PlusOutlined } from \"@ant-design/icons\"\nimport CategoriesTable from \"../CategoriesTable\"\n\nconst Categories = () => {\n  return (\n    <>\n      <h1>Categories</h1>\n      <CategoriesTable/>\n      <Tooltip title=\"Add Category\">\n        <Button type=\"dashed\" shape=\"circle\"\n                style={{ position: \"fixed\", bottom: \"50px\", right: \"50px\", color: \"#08c\" }}\n        ><PlusOutlined\n          style={{ fontSize: \"22px\", color: \"#08c\" }}\n        /></Button>\n      </Tooltip>\n    </>\n  )\n}\n\nexport default Categories","import { gql } from \"apollo-boost\"\n\nexport const productsAllQuery = gql`\n    {\n        productsAll{\n            id,\n            name,\n            price,\n            images,\n            category{\n                id,\n                name,\n                icons\n            }\n        }\n    }\n`\nexport const productsByCategoryIdQuery = gql`\n    query productsByCategoryId($categoryId: ID!){\n        productsByCategoryId(categoryId: $categoryId){\n            id\n            name\n            price\n            category{\n                id\n                name\n            }\n        }\n    }\n`","import { gql } from \"apollo-boost\"\n\nexport const addProductMutation = gql`\n    mutation addProduct($name: String!, $price: String!, $categoryId: ID!, $images: [String] ) {\n        addProduct(name: $name, price: $price, categoryId: $categoryId, images: $images ){\n            id\n            name\n            price\n            images\n            category{\n                id\n                name\n            }\n        }\n    }\n`\n\nexport const updateProductMutation = gql`\n    mutation updateProduct($id: ID!, $name: String!, $price: String!, $categoryId: ID!, $images: [String] ) {\n        updateProduct(id: $id, name: $name, price: $price, categoryId: $categoryId, images: $images ){\n            id\n            name\n            price\n            images\n            category{\n                id\n                name\n            }\n        }\n    }\n`\n\nexport const deleteProductMutation = gql`\n    mutation deleteProduct($id: ID!) {\n        deleteProduct(id: $id){\n            id\n            name\n            price\n            images\n            category{\n                id\n                name\n            }\n        }\n    }\n`\nexport const clearRecycleBinMutation = gql`\n    mutation clearRecycleBin {\n        clearRecycleBin{\n            __typename\n        }\n    }\n`\n","import { EDIT_PRODUCT, IS_OPEN_MODAL, IS_OPEN_DELETE_MODAL, IS_OPEN_EDIT_MODAL, IS_OPEN_ADD_MODAL } from \"./types\"\n\nexport const editProduct = product => ({\n  type: EDIT_PRODUCT,\n  payload: product\n})\n\nexport const setIsOpenEditProductModal = isOpen => ({\n  type: IS_OPEN_EDIT_MODAL,\n  payload: isOpen\n})\n\nexport const setIsOpenAddProductModal = isOpen => ({\n  type: IS_OPEN_ADD_MODAL,\n  payload: isOpen\n})\n","export const EDIT_PRODUCT = \"EDIT_PRODUCT\"\nexport const IS_OPEN_EDIT_MODAL = \"IS_OPEN_EDIT_MODAL\"\nexport const IS_OPEN_ADD_MODAL = \"IS_OPEN_ADD_MODAL\"\n","import React, { useState } from \"react\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\nimport { Button, Modal, Table, Tooltip } from \"antd\"\nimport { productsAllQuery, productsByCategoryIdQuery } from \"../Products/query\"\nimport { deleteProductMutation, updateProductMutation } from \"../Products/mutations\"\nimport { connect } from \"react-redux\"\nimport { editProduct, setIsOpenEditProductModal } from \"../../actions\"\nimport { DeleteOutlined } from \"@ant-design/icons\"\n\nconst styleImagesInTable = { width: \"50px\", height: \"100%\", marginRight: \"10px\" }\nconst styleIconInTable = { width: \"20px\", height: \"100%\", marginRight: \"10px\" }\n\nconst ProductsTable = ({ editProduct, setIsOpenEditProductModal }) => {\n  const { loading, error, data } = useQuery(productsAllQuery)\n  const [updateProduct, {}] = useMutation(updateProductMutation, {\n    update(cache, { data: { updateProduct } })\n    {\n      const { productsByCategoryId } = cache.readQuery({\n        query: productsByCategoryIdQuery,\n        variables: {\n          categoryId: process.env.REACT_APP_RECYCLE_BIN_ID\n        }\n      })\n      cache.writeQuery({\n        query: productsByCategoryIdQuery,\n        variables: { categoryId: process.env.REACT_APP_RECYCLE_BIN_ID },\n        data: { productsByCategoryId: productsByCategoryId.concat(updateProduct) }\n      })\n    }\n  })\n  const [isVisualDeleteModal, setIsVisualDeleteModal] = useState(false)\n  const [productDeleted, setProductDeleted] = useState({})\n  console.log(\"productDeleted\", productDeleted)\n  if (loading) return <p>Loading ... </p>\n  const { productsAll } = data\n  const productsAllWithoutRecycleBin = productsAll.filter(prod => {\n    const { category } = prod\n    return category.id !== process.env.REACT_APP_RECYCLE_BIN_ID\n  })\n\n  console.log(\"productsAllWithoutRecycleBin\", productsAllWithoutRecycleBin)\n  const handleEdit = (id) => {\n    editProduct(productsAllWithoutRecycleBin.find(prod => prod.id === id))\n    setIsOpenEditProductModal(true)\n  }\n\n  const handleDelete = (id) => {\n    setIsVisualDeleteModal(true)\n    setProductDeleted(productsAllWithoutRecycleBin.find(prod => prod.id === id))\n  }\n\n  const handleOk = () => {\n    console.log(\"productDeleted.id\", productDeleted.id)\n    const { id, name, price, images, icon } = productDeleted\n    updateProduct({\n      variables: {\n        id, name, price, categoryId: process.env.REACT_APP_RECYCLE_BIN_ID, images, icon\n      }\n\n    }).then(m => console.log(\"updateProductMESSAGE:\", m))\n      .catch(e => console.log(\"updateProductERROR:\", e))\n\n    // deleteProduct({\n    //   variables: {\n    //     id: productDeleted.id\n    //   }\n    // }).then(mess => console.log(\"deleteProduct response:\", mess))\n    setIsVisualDeleteModal(false)\n  }\n\n  const handleCancel = () => {\n    setIsVisualDeleteModal(false)\n  }\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\"\n    },\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      key: \"id\"\n    },\n    {\n      title: \"Price\",\n      dataIndex: \"price\",\n      key: \"price\"\n    },\n    {\n      title: \"Category\",\n      dataIndex: \"category\",\n      key: \"category\",\n      render: category => {\n        const { name, icons, id } = category\n        return <div><span>{name} </span>\n          {(icons.length !== 0)\n            ? <img\n              key={icons[0]} alt=\"img\"\n              src={icons[0]}\n              style={styleIconInTable}/> : \"\"}\n          <span> {id}</span>\n        </div>\n      }\n    },\n    {\n      title: \"Images\",\n      dataIndex: \"images\",\n      key: \"images\",\n      render: images => {\n        return (images.length !== 0)\n          ? <div>\n            {\n              images\n                .map(image => <img\n                  key={image} alt=\"img\"\n                  src={image}\n                  style={styleImagesInTable}/>\n                )\n            }\n          </div>\n          : <span>no images</span>\n      }\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"id\",\n      key: \"id\",\n      render: (id) => <>\n        <Tooltip title=\"Edit this product\">\n          <Button onClick={() => handleEdit(id)} type=\"dashed\">\n            Edit\n          </Button>\n        </Tooltip>\n        <Tooltip title=\"Move to recycle bin\">\n          <Button style={{float: \"right\"}} onClick={() => handleDelete(id)} type=\"dashed\" danger icon={<DeleteOutlined/>}>\n             &nbsp;\n          </Button>\n        </Tooltip>\n      </>\n    }\n  ]\n\n  return (\n    <>\n      <Table dataSource={productsAllWithoutRecycleBin} columns={columns} rowKey=\"id\"/>\n      <Modal\n        title=\"Delete product in recycle bin?\"\n        visible={isVisualDeleteModal}\n        onOk={() => handleOk(productDeleted.id)}\n        onCancel={handleCancel}\n      >\n        <p>{productDeleted.name}</p>\n      </Modal>\n    </>\n  )\n}\n\nexport default connect(null, { setIsOpenEditProductModal, editProduct }, null, { pure: false }\n)(ProductsTable)","import React, { useEffect, useState } from \"react\"\nimport { Button, Form, Input, Modal, Select, Skeleton } from \"antd\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\nimport PlusOutlined from \"@ant-design/icons/lib/icons/PlusOutlined\"\nimport MinusCircleOutlined from \"@ant-design/icons/lib/icons/MinusCircleOutlined\"\nimport { updateProductMutation } from \"../Products/mutations\"\nimport { categoriesAllQuery } from \"../Categories/query\"\nimport { connect } from \"react-redux\"\nimport { editProduct, setIsOpenEditProductModal } from \"../../actions\"\n\nconst ProductEditForm = ({ edited_product, editProduct, isOpenEditProductModal, setIsOpenEditProductModal }) => {\n  const [formEditProduct] = Form.useForm()\n  const [updateProduct, {}] = useMutation(updateProductMutation)\n  const { loading, error, data } = useQuery(categoriesAllQuery)\n  const [values, setValues] = useState({})\n  useEffect(() => {\n    setValues(edited_product)\n    console.log(\"edited_product\", edited_product)\n  }, [edited_product])\n  useEffect(() => {\n    formEditProduct.setFieldsValue({\n      \"name\": edited_product.name,\n      \"price\": edited_product.price,\n      \"images\": edited_product.images,\n      \"icon\": edited_product.icon\n\n      // \"categoryId\": edited_product.category.name\n    })\n    return () => {\n      formEditProduct.resetFields()\n    }\n  }, [edited_product])\n  console.log(\"values+++\", values)\n\n  const onFinish = (valuefromformlist) => {\n    console.log(\"Received values of form:\", values)\n\n    const { name, categoryId, price, images, icon } = valuefromformlist\n    const id = String(values.id)\n\n    console.log(\"onFinish\", valuefromformlist)\n    updateProduct({\n      variables: {\n        id, name, price, categoryId, images, icon\n      }\n      // update: (proxy, { data: { updateProduct = {} } }) => { // your mutation response\n      //   const mutationResult = updateProduct\n      //   const updates = ApolloCacheUpdater({\n      //     proxy,\n      //     queriesToUpdate: [updateProduct],\n      //     searchVariables: {},\n      //     mutationResult\n      //   })\n      //   if (updates) console.log(`Product updated`)\n      // }\n    }).then(m => console.log(\"updateProductMESSAGE:\", m))\n      .catch(e => console.log(\"updateProductERROR:\", e))\n\n\n    // form.resetFields()\n    setIsOpenEditProductModal(false)\n  }\n  const handleCancel = e => {\n    console.log(e)\n    // form.resetFields()\n    setIsOpenEditProductModal(false)\n    editProduct({})\n  }\n  const handleChange = e => {\n    const { name, value } = e.target\n    setValues({ ...values, [name]: value })\n  }\n  if (!data.categoriesAll) return <Skeleton/>\n  const { categoriesAll } = data\n  if (!edited_product) return <Skeleton/>\n  const { category } = edited_product\n  // const cat = categoriesAll.find(category => category.id == edited_product.category.id)\n  console.log(\"cat\", category)\n  //\n  // let edited_product_category_name = category.name\n  // console.log(\"edited_product_category_name\",edited_product_category_name)\n\n  console.log(\"OpenEditProductModal\", isOpenEditProductModal)\n\n  return (\n    <Modal\n      title={`Product information id: ${values.id}`}\n      visible={isOpenEditProductModal}\n      footer={false}\n      // onOk={onFinish}\n      onCancel={handleCancel}\n      forceRender={true}\n      destroyOnClose={false}\n      // okButtonProps={{htmlType: \"submit\" }}\n      // cancelButtonProps={{ htmlType: \"submit\" }}\n    >\n      {/*{formEditProduct.setFieldsValue({*/}\n      {/*  \"name\": values.name,*/}\n      {/*  \"price\": values.price,*/}\n      {/*  \"images\": values.images,*/}\n      {/*  \"icon\": values.icon*/}\n      {/*  // \"categoryId\": values.category.id*/}\n      {/*})}*/}\n      <Form\n        form={formEditProduct}\n        // initialValues={{\n        //   [\"price\"]: values.price,\n        //   [\"name\"]: values.name,\n        //   [\"images\"]: values.images,\n        //   [\"icon\"]: values.icon\n        //   // [\"categoryId\"]: values.category.id\n        //\n        // }}\n        name=\"product\" {...formItemLayoutWithOutLabel} onFinish={onFinish}>\n        <Form.Item\n          label=\"Name product\"\n          name=\"name\"\n          // noStyle\n          value={values.name}\n          rules={[{ required: true, message: \"Name product is required\" }]}\n        >\n          <Input\n            // name=\"name\"\n            // value={values.name}\n            onChange={handleChange} placeholder=\"name product\"\n            style={{ width: \"100%\", marginRight: 8 }}/>\n        </Form.Item>\n        <Form.Item\n          label=\"Price\"\n          name=\"price\"\n          // noStyle\n          rules={[{ required: true, message: \"Price is required\" }]}\n        >\n          <Input type=\"number\" placeholder=\"Price $\" style={{ width: \"100%\", marginRight: 8 }}/>\n        </Form.Item>\n\n        <Form.Item\n          label=\"Category\"\n          name=\"categoryId\"\n          // noStyle\n          // defaultValue=\"5e820a91e3cd504a9fef2b0f\"\n          onChange={handleChange}\n          rules={[{ required: true, message: \"Category is required\" }]}\n        >\n          <Select\n            // defaultValue={category.name}\n            placeholder=\"Select category\">\n            {categoriesAll.map(category =>\n              <Select.Option\n                key={category.id}\n                firstActiveValue=\"nike\"\n\n              >{category.name}</Select.Option>\n            )\n            }\n          </Select>\n        </Form.Item>\n\n        <Form.List name=\"images\">\n          {(fields, { add, remove }) => {\n            return (\n              <div>\n                {fields.map((field, index) => (\n                  <Form.Item\n                    {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n                    label={index === 0 ? \"Images\" : \"\"}\n                    required={false}\n                    key={field.key}\n                  >\n                    <Form.Item\n                      {...field}\n                      validateTrigger={[\"onChange\", \"onBlur\"]}\n                      rules={[\n                        {\n                          required: true,\n                          whitespace: true,\n                          message: \"Please input image url or delete this field.\"\n                        }\n                      ]}\n                      noStyle\n                    >\n                      <Input value={values.images[index]} placeholder=\"image url\"\n                             style={{ width: \"90%\", marginRight: 8 }}/>\n                    </Form.Item>\n                    {fields.length > 1 ? (\n                      <MinusCircleOutlined\n                        className=\"dynamic-delete-button\"\n                        onClick={() => {\n                          remove(field.name)\n                        }}\n                      />\n                    ) : null}\n                  </Form.Item>\n                ))}\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => {\n                      add()\n                    }}\n                    style={{ width: \"80%\" }}\n                  >\n                    <PlusOutlined/> Add image url\n                  </Button>\n                </Form.Item>\n              </div>\n            )\n          }}\n        </Form.List>\n        <Form.Item\n          label=\"Icon\"\n          name=\"icon\"\n          // noStyle\n        >\n          <Input onChange={handleChange} placeholder=\"icon url\" style={{ width: \"100%\", marginRight: 8 }}/>\n        </Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form>\n\n    </Modal>\n  )\n}\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 4 }\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 20 }\n  }\n}\n\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: { span: 24, offset: 0 },\n    sm: { span: 20, offset: 4 }\n  }\n}\n\nexport default connect(state => ({\n    isOpenEditProductModal: state.edit_product_modal.isOpen,\n    edited_product: state.edit_product.product\n  }), { setIsOpenEditProductModal, editProduct }\n)(ProductEditForm)","import React, { useEffect, useRef, useState } from \"react\"\nimport { Button, Form, Input, Modal, Select } from \"antd\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\nimport PlusOutlined from \"@ant-design/icons/lib/icons/PlusOutlined\"\nimport MinusCircleOutlined from \"@ant-design/icons/lib/icons/MinusCircleOutlined\"\nimport { addProductMutation } from \"../Products/mutations\"\nimport { categoriesAllQuery } from \"../Categories/query\"\nimport { connect } from \"react-redux\"\nimport { setIsOpenAddProductModal } from \"../../actions\"\nimport ApolloCacheUpdater from \"apollo-cache-updater\"\nimport { productsAllQuery } from \"../Products/query\"\n\nconst ProductAddForm = ({ isOpenAddProductModal, setIsOpenAddProductModal }) => {\n  const [addProduct, {}] = useMutation(addProductMutation,\n    {\n      update(cache, { data: { addProduct } }) {\n        const { productsAll } = cache.readQuery({ query: productsAllQuery })\n        cache.writeQuery({\n          query: productsAllQuery,\n          data: { productsAll: productsAll.concat([addProduct]) }\n        })\n      }\n    })\n  const { loading, error, data: data_categories } = useQuery(categoriesAllQuery)\n  const [values, setValues] = useState({})\n  console.log(\"values+++\", values)\n\n  const onFinish = (valuefromformlist) => {\n    console.log(\"Received values of form:\", values)\n\n    const { name, images, price, categoryId, icon } = values\n    // const price = Number(values.price)\n    console.log(\"onFinish\")\n    addProduct({\n      variables: {\n        name, price, categoryId, images: valuefromformlist.images, icon\n      }\n      // update: (proxy, { data: { addProduct = {} } }) => { // your mutation response\n      //   const mutationResult = addProduct // mutation result to pass into the updater\n      //   const updates = ApolloCacheUpdater({\n      //     // proxy, // apollo proxy\n      //     queriesToUpdate: [addProduct], // queries you want to automatically update\n      //     searchVariables: {\n      //       published: true // update queries in the cache that have these vars\n      //     },\n      //     mutationResult\n      //   })\n      //   if (updates) console.log(`Product added`) // if no errors\n      // }\n\n    }).then(m => console.log(\"addProduct:\", m))\n      .catch(e => console.log(\"addProductERROR:\", e))\n\n    setIsOpenAddProductModal(false)\n  }\n\n  const handleCancel = e => {\n    e.preventDefault()\n    console.log(e)\n    setIsOpenAddProductModal(false)\n  }\n\n  const handleChange = e => {\n    const { name, value } = e.target\n    console.log(\"target\", e.target)\n    setValues({ ...values, [name]: value })\n  }\n\n  const handleChangeSelect = value => {\n    setValues({ ...values, \"categoryId\": value })\n  }\n  const { categoriesAll = [] } = data_categories\n  console.log(\"isOpenAddProductModal\", isOpenAddProductModal)\n\n  return (\n    <Modal\n      title=\"Product information\"\n      visible={isOpenAddProductModal}\n      footer={false}\n      // onOk={onFinish}\n      onCancel={handleCancel}\n      // forceRender={true}\n      // destroyOnClose={true}\n      // okButtonProps={{htmlType: \"submit\" }}\n      // cancelButtonProps={{ htmlType: \"submit\" }}\n    >\n      <Form\n        // onChange={handleChange}\n        name=\"product\" {...formItemLayoutWithOutLabel}\n        onFinish={onFinish}>\n        <Form.Item\n          label=\"Name product\"\n          // name=\"name\"\n          // noStyle\n          rules={[{ required: true, message: \"Name product is required\" }]}\n        >\n          <Input\n            name=\"name\"\n            onChange={handleChange} placeholder=\"name product\"\n            style={{ width: \"100%\", marginRight: 8 }}/>\n        </Form.Item>\n        <Form.Item\n          label=\"Price\"\n          // name=\"price\"\n          // noStyle\n          rules={[{ required: true, message: \"Price is required\" }]}\n        >\n          <Input\n            name=\"price\"\n            onChange={handleChange}\n            // value={0}\n            type=\"number\" placeholder=\"Price $\" style={{ width: \"100%\", marginRight: 8 }}/>\n        </Form.Item>\n\n        <Form.Item\n          label=\"Category\"\n          name=\"categoryId\"\n          // noStyle\n          // onChange={handleChange}\n          rules={[{ required: true, message: \"Category is required\" }]}\n        >\n          <Select\n            name=\"categoryId\"\n            // onChange={handleChange}\n            onChange={handleChangeSelect}\n            placeholder=\"Select category\">\n            {categoriesAll.map(category =>\n              <Select.Option\n                key={category.id}\n                value={category.id}\n                onChange={handleChange}\n              >{category.name}</Select.Option>\n            )\n            }\n          </Select>\n        </Form.Item>\n\n        <Form.List name=\"images\">\n          {(fields, { add, remove }) => {\n            return (\n              <div>\n                {fields.map((field, index) => (\n                  <Form.Item\n                    {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\n                    label={index === 0 ? \"Images\" : \"\"}\n                    required={false}\n                    key={field.key}\n                  >\n                    <Form.Item\n                      {...field}\n                      validateTrigger={[\"onChange\", \"onBlur\"]}\n                      rules={[\n                        {\n                          required: true,\n                          whitespace: true,\n                          message: \"Please input image url or delete this field.\"\n                        }\n                      ]}\n                      noStyle\n                    >\n                      <Input\n                        // value={values.images[index]}\n                        style={{ width: \"90%\", marginRight: 8 }}/>\n                    </Form.Item>\n                    {fields.length > 1 ? (\n                      <MinusCircleOutlined\n                        className=\"dynamic-delete-button\"\n                        onClick={() => {\n                          remove(field.name)\n                        }}\n                      />\n                    ) : null}\n                  </Form.Item>\n                ))}\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => {\n                      add()\n                    }}\n                    style={{ width: \"80%\" }}\n                  >\n                    <PlusOutlined/> Add image url\n                  </Button>\n                </Form.Item>\n              </div>\n            )\n          }}\n        </Form.List>\n        <Form.Item\n          label=\"Icon\"\n          name=\"icon\"\n          // noStyle\n        >\n          <Input onChange={handleChange} placeholder=\"icon url\" style={{ width: \"100%\", marginRight: 8 }}/>\n        </Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form>\n\n    </Modal>\n  )\n}\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 4 }\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 20 }\n  }\n}\n\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: { span: 24, offset: 0 },\n    sm: { span: 20, offset: 4 }\n  }\n}\n\nexport default connect(state => ({\n    isOpenAddProductModal: state.add_product_modal.isOpen\n  }), { setIsOpenAddProductModal }\n)(ProductAddForm)","import React, { useState } from \"react\"\nimport { Button, Tooltip } from \"antd\"\nimport { PlusOutlined } from \"@ant-design/icons\"\nimport ProductsTable from \"../ProductsTable\"\nimport ProductEditForm from \"../ProductEditForm\"\nimport ProductAddForm from \"../ProductAddForm\"\nimport { connect } from \"react-redux\"\nimport { editProduct, setIsOpenAddProductModal } from \"../../actions\"\n\nconst Products = ({ setIsOpenAddProductModal }) => {\n\n  const onClickHandler = () => {\n    editProduct({})\n    setIsOpenAddProductModal(true)\n  }\n  return (\n    <>\n      <h1>Products</h1>\n      <ProductsTable/>\n      <ProductEditForm/>\n      <ProductAddForm/>\n      <Tooltip title=\"Add Product\">\n        <Button onClick={onClickHandler} type=\"dashed\" shape=\"circle\"\n                style={{ position: \"fixed\", bottom: \"50px\", right: \"50px\", color: \"#08c\" }}\n        ><PlusOutlined\n          style={{ fontSize: \"22px\", color: \"#08c\" }}\n        /></Button>\n      </Tooltip>\n    </>\n  )\n}\n\nexport default connect(null, { setIsOpenAddProductModal, editProduct }, null, { pure: false }\n)(Products)","import React from \"react\"\n\nconst RecycleBinIcon = ({categoryById, productsByCategoryId}) => {\n  if (productsByCategoryId.length == 0)\n    return (\n      <img src={categoryById.icons[0]} width={15} alt=\"recycle bin\"/>\n    )\n  return (\n      <img src={categoryById.icons[3]} width={15} alt=\"recycle bin\"/>\n  )\n}\n\nexport default RecycleBinIcon","import React, { useState } from \"react\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\nimport { Button, Modal, Table, Tooltip } from \"antd\"\nimport { deleteProductMutation } from \"../Products/mutations\"\nimport { productsByCategoryIdQuery } from \"../Products/query\"\n\nconst styleImagesInTable = { width: \"50px\", height: \"100%\", marginRight: \"10px\" }\nconst styleIconInTable = { width: \"20px\", height: \"100%\", marginRight: \"10px\" }\n\nconst RecycleBinProductsTable = ({ editProduct, setIsOpenEditProductModal }) => {\n  const { loading: recycle_bin_prod_loading, recycle_bin_prod_error, data: recycle_bin_prod_data } = useQuery(productsByCategoryIdQuery, {\n    variables: {\n      categoryId: process.env.REACT_APP_RECYCLE_BIN_ID\n    }\n  })\n\n  const [isVisualDeleteModal, setIsVisualDeleteModal] = useState(false)\n  const [productDeleted, setProductDeleted] = useState({})\n  const [deleteProduct, {}] = useMutation(deleteProductMutation,\n    {\n      update(cache, { data: { deleteProduct } }) {\n        const { productsByCategoryId } = cache.readQuery({\n          query: productsByCategoryIdQuery,\n          variables: {\n            categoryId: process.env.REACT_APP_RECYCLE_BIN_ID\n          }\n        })\n        cache.writeQuery({\n          query: productsByCategoryIdQuery,\n          variables: { categoryId: process.env.REACT_APP_RECYCLE_BIN_ID },\n          data: { productsByCategoryId: productsByCategoryId.filter(prod => prod.id !== deleteProduct.id) }\n        })\n      }\n    }\n  )\n  console.log(\"productDeleted\", productDeleted)\n\n  if (recycle_bin_prod_loading) return <p>Loading ... </p>\n\n  const { productsByCategoryId } = recycle_bin_prod_data\n\n  console.log(\"productsByCategoryId\", productsByCategoryId)\n\n  const handleEdit = (id) => {\n\n  }\n\n  const handleDelete = (id) => {\n    setIsVisualDeleteModal(true)\n    setProductDeleted(productsByCategoryId.find(prod => prod.id === id))\n  }\n\n  const handleOk = () => {\n    console.log(\"productDeleted.id\", productDeleted.id)\n    deleteProduct({\n      variables: {\n        id: productDeleted.id\n      }\n    }).then(mess => console.log(\"deleteProduct response:\", mess))\n    setIsVisualDeleteModal(false)\n  }\n\n  const handleCancel = () => {\n    setIsVisualDeleteModal(false)\n  }\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\"\n    },\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      key: \"id\"\n    },\n    {\n      title: \"Price\",\n      dataIndex: \"price\",\n      key: \"price\"\n    },\n    {\n      title: \"Images\",\n      dataIndex: \"images\",\n      key: \"images\",\n      render: images => {\n        return (images)\n          ? <div>\n            {\n              images\n                .map(image => <img\n                  key={image} alt=\"img\"\n                  src={image}\n                  style={styleImagesInTable}/>\n                )\n            }\n          </div>\n          : <span>no icons</span>\n      }\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"id\",\n      key: \"id\",\n      render: (id) => <>\n        <Tooltip title=\"Recovery this product in any category\">\n          <Button disabled onClick={() => handleEdit(id)} type=\"dashed\">\n            Recovery in category\n          </Button>\n        </Tooltip>\n        <Tooltip title=\"Delete forever\">\n          <Button onClick={() => handleDelete(id)} type=\"dashed\" danger>\n            Delete\n          </Button>\n        </Tooltip>\n      </>\n    }\n  ]\n  return (\n    <>\n      <Table dataSource={productsByCategoryId} columns={columns} rowKey=\"id\"/>\n      <Modal\n        title=\"Delete product?\"\n        visible={isVisualDeleteModal}\n        onOk={() => handleOk(productDeleted.id)}\n        onCancel={handleCancel}\n      >\n        <p>{productDeleted.name}</p>\n      </Modal>\n    </>\n  )\n}\n\nexport default RecycleBinProductsTable","import React, { useState } from \"react\"\nimport RecycleBinProductsTable from \"../RecycleBinProductsTable\"\nimport { Button, Modal, Tooltip } from \"antd\"\nimport { DeleteOutlined } from \"@ant-design/icons\"\nimport { useMutation } from \"@apollo/react-hooks\"\nimport { clearRecycleBinMutation } from \"../Products/mutations\"\nimport { productsAllQuery, productsByCategoryIdQuery } from \"../Products/query\"\n\nconst RecycleBin = () => {\n  const [isVisualDeleteModal, setIsVisualDeleteModal] = useState(false)\n  const [clearRecycleBin] = useMutation(clearRecycleBinMutation,\n  {\n    update(cache, { data: { clearRecycleBin } })\n    {\n      const { productsByCategoryId } = cache.readQuery({\n        query: productsByCategoryIdQuery,\n        variables: {\n          categoryId: process.env.REACT_APP_RECYCLE_BIN_ID\n        }\n      })\n      cache.writeQuery({\n        query: productsByCategoryIdQuery,\n        variables: { categoryId: process.env.REACT_APP_RECYCLE_BIN_ID },\n        data: { productsByCategoryId: [] }\n      })\n    }\n  }\n)\n\n  const handleDelete = () => {\n    setIsVisualDeleteModal(true)\n  }\n  const handleOk = () => {\n    clearRecycleBin().then(r => console.log(\"Cleared recycle bin\"))\n    setIsVisualDeleteModal(false)\n  }\n\n  const handleCancel = () => {\n    setIsVisualDeleteModal(false)\n  }\n\n  return (\n    <>\n      <h1 style={{ display: \"inline-block\" }}>Recycle bin</h1>\n      <Tooltip title=\"Delete all products from recycle bin forever\">\n        <Button style={{ float: \"right\" }} onClick={handleDelete} type=\"dashed\" danger icon={<DeleteOutlined/>}>\n          Clear recycle bin\n        </Button>\n      </Tooltip>\n      <Modal\n        title=\"Clear recycle bin?\"\n        visible={isVisualDeleteModal}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <DeleteOutlined/>...\n      </Modal>\n      <RecycleBinProductsTable/>\n    </>\n  )\n}\n\nexport default RecycleBin","import React from \"react\"\nimport { Empty, Tabs } from \"antd\"\nimport Categories from \"../Categories\"\nimport Products from \"../Products\"\nimport { Query } from \"react-apollo\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { categoriesAllQuery, categoryByIdQuery } from \"../Categories/query\"\nimport { productsAllQuery, productsByCategoryIdQuery } from \"../Products/query\"\nimport AndroidOutlined from \"@ant-design/icons/lib/icons/AndroidOutlined\"\nimport RecycleBinIcon from \"../RecycleBinIcon\"\nimport RecycleBin from \"../RecycleBin\"\n\nconst { TabPane } = Tabs\n\nfunction callback(key) {\n  console.log(key)\n}\n\nconst TabsContainer = () => {\n  const { loading: cat_loading, cat_error, data: cat_data } = useQuery(categoriesAllQuery)\n  const { loading: prod_loading, prod_error, data: prod_data } = useQuery(productsAllQuery)\n  const { loading: recycle_bin_loading, recycle_bin_error, data: recycle_bin_data } = useQuery(productsByCategoryIdQuery, {\n    variables: {\n      categoryId: process.env.REACT_APP_RECYCLE_BIN_ID\n    }\n  })\n  const { loading: recycle_bin_prod_loading, recycle_bin_prod_error, data: recycle_bin_prod_data } = useQuery(productsByCategoryIdQuery, {\n    variables: {\n      categoryId: process.env.REACT_APP_RECYCLE_BIN_ID\n    }\n  })\n  const { loading: recycle_bin_cat_loading, recycle_bin_cat_error, data: recycle_bin_cat_data } = useQuery(categoryByIdQuery, {\n    variables: {\n      id: process.env.REACT_APP_RECYCLE_BIN_ID\n    }\n  })\n\n  if (cat_loading || prod_loading || recycle_bin_prod_loading || recycle_bin_cat_loading) return <p>Loading ... </p>\n  const { categoriesAll } = cat_data\n  const { productsAll } = prod_data\n  const { productsByCategoryId } = recycle_bin_prod_data\n  const { categoryById } = recycle_bin_cat_data\n  console.log(\"categoryById\", categoryById)\n  return (\n    <Tabs defaultActiveKey=\"1\" onChange={callback}>\n      <Tabs.TabPane tab=\"Products\" key=\"1\">\n        <Products/>\n      </Tabs.TabPane>\n      <TabPane tab=\"Categories\" key=\"2\">\n        <Categories/>\n      </TabPane>\n      <TabPane tab={\n        <span>\n          <RecycleBinIcon categoryById={categoryById} productsByCategoryId={productsByCategoryId}/>\n          Recycle bin\n        </span>\n      } key=\"3\">\n        {(productsByCategoryId.length === 0) ? <Empty/> : <RecycleBin/>}\n      </TabPane>\n\n    </Tabs>\n  )\n}\n\nexport default TabsContainer","import React from \"react\"\nimport TabsContainer from \"./components/TabsContainer\"\nimport \"antd/dist/antd.css\";\nimport \"./App.css\"\n\nfunction App() {\n  console.log(\"after .env\")\n  console.log(\"process.env.NODE_ENV \",process.env.NODE_ENV)\n  console.log(\"process.env.REACT_APP_BASE_URL \",process.env.REACT_APP_BASE_URL)\n  console.log(\"process.env.REACT_APP_RECYCLE_BIN_ID \",process.env.REACT_APP_RECYCLE_BIN_ID)\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          <code> APP</code>\n        </p>\n        <a\n          className=\"App-link\"\n          href={process.env.REACT_APP_BASE_URL}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          BASE_URL\n        </a>\n      </header>\n      <TabsContainer/>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import ApolloClient from \"apollo-boost\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { ApolloLink } from 'apollo-link';\n\n// const httpLink = new HttpLink({\n//   uri: process.env.REACT_APP_BASE_URL,\n//   fetch,\n//   credentials: 'same-origin',\n//   headers: {},\n// });\nconst cache = new InMemoryCache();\n// const link = ApolloLink.from([httpLink]);\n  // const link = new HttpLink({ uri: process.env.REACT_APP_BASE_URL }),\nexport const client = new ApolloClient({\n  cache,\n  uri: process.env.REACT_APP_BASE_URL,\n})\n","import { IS_OPEN_EDIT_MODAL } from \"../actions/types\"\n\nconst initialState = {\n  isOpen: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case IS_OPEN_EDIT_MODAL:\n      return {\n        ...state,\n        isOpen: action.payload\n      }\n    default:\n      return state\n  }\n}","import { IS_OPEN_ADD_MODAL } from \"../actions/types\"\n\nconst initialState = {\n  isOpen: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case IS_OPEN_ADD_MODAL:\n      return {\n        ...state,\n        isOpen: action.payload\n      }\n    default:\n      return state\n  }\n}","import { EDIT_PRODUCT } from \"../actions/types\"\n\nconst initialState = {\n  product: {}\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case EDIT_PRODUCT:\n      return {\n        ...state,\n        product: action.payload\n      }\n    default:\n      return state\n  }\n}","import { combineReducers } from \"redux\"\nimport edit_product_modal from \"./edit-modal\"\nimport add_product_modal from \"./add-modal\"\nimport edit_product from \"./edit-product\"\n\nexport default combineReducers({ edit_product_modal, add_product_modal, edit_product })","\nimport { createStore, compose } from \"redux\";\nimport reducer from \"../reducer\";\n\nconst composeEnhancers =\n  typeof window === \"object\" &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\nconst enhancer = composeEnhancers();\n\nconst store = createStore(reducer, {}, enhancer);\n\nexport default store;","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport { ApolloProvider } from \"react-apollo\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { client } from \"./store/apollo-client\"\nimport store from \"./store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <ApolloProvider client={client}>\n      <App/>\n    </ApolloProvider>\n  </Provider>, document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}